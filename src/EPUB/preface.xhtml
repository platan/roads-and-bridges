<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>
      Roads and Bridges
    </title>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="style.css" />
  </head>
  <body>
    <h1>
      Preface
    </h1>
    <section id="foreword">
      <h2>
        Foreword
      </h2>
      <p>
        I stumbled upon the problem described in this report on a hunch. Having previously worked in startups, and then
        venture capital, I saw the enormous amounts of money being poured into software companies. But as an amateur
        software developer, I knew that I had never done any of it alone. I used free and publicly available code (also
        known as “open source” code), which I cobbled together and offered up for personal or commercial purposes.
        Really, the people behind those projects, whoever they were, had done most of the work.
      </p>
      <p>
        I mulled over this observation for several years, as I watched the explosion of coding “bootcamps” graduating
        new software developers left and right, and as I watched startups raise tens of millions of dollars selling
        products which I knew, under the hood, were probably more public than proprietary code. Having previously
        worked in the nonprofit sector, I immediately thought of public goods and their associated challenges, yet this
        vocabulary was strangely absent among my peers in software.
      </p>
      <p>
        After I left my job in venture capital last year, I set off to explore the paradox I couldn’t stop thinking
        about: that there were valuable software tools that couldn’t be supported by commercial models, and that they
        lacked any form of institutional support.
      </p>
      <p>
        Funnily enough, open source code wasn’t on my original list. I had mistakenly assumed, as had my peers, that
        these tools were an example of a particularly well-supported public good in software. When I brought up open
        source to friends and mentors, they gently dissuaded me from pursuing the topic, encouraging me instead to find
        other examples that actually needed the help.
      </p>
      <p>
        A few open source projects crossed my radar, however, and shattered those assumptions. It turned out that
        sustainability challenges were well-known among those who contributed to open source. The more I dug, the more
        I found blog posts, articles, and frequent public conversations about the stress and exhaustion felt by those
        who maintain open source projects. Everybody knew someone else I should talk to, and before I knew it, I had
        collected countless stories on this topic.
      </p>
      <p>
        I realized I had walked into a problem with which the producers (open source contributors) were extremely
        familiar, but that the consumers (software companies and other users of open source code) were seemingly
        unaware of. That discrepancy made me want to look more closely.
      </p>
      <p>
        In addition, it seemed that open source itself was changing, perhaps even bifurcating. I found myself having
        completely different conversations with different generations of open source contributors. They seemed to have
        divergent philosophies and values; they may as well not have been using the same terminology. I learned that
        open source had seen an explosion of production as well as demand in the past three to five years, thanks to
        improvements in developer tools and workflows. Today’s open source contributor looked very different from an
        open source contributor ten years ago, much less thirty years ago. And yet these different generations weren’t
        talking to each other, making productive conversations about sustainability difficult.
      </p>
      <p>
        A chance conversation with Ethan Zuckerman of the MIT Center for Civic Media gave me an opportunity to share
        these findings more widely. I described to Ethan the problem I was seeing, though I didn’t know exactly what it
        all meant or the vocabulary I should be using, and he kindly put me in touch with Jenny Toomey of the Ford
        Foundation. Jenny suggested I aggregate my findings into a report. In the process, a narrative around our
        modern digital society, and the hidden infrastructure that powers it, has emerged.
      </p>
      <p>
        This report would not have happened without Ethan and Jenny taking a chance on a half-baked idea that now,
        through the process of writing, has been shaped into something more. I am extremely grateful to both of them
        for their intuition. I am additionally grateful to Michael Brennan and Lori McGlinchey for their guidance,
        perspective and enthusiasm in the editing process. Finally, and perhaps most importantly, I am indebted to
        every person working in open source who made their stories public for people like me to read, and especially
        those who took a moment out of their busy schedules to humor me with a conversation or an email. This report is
        a collection of their wisdom, not mine. I am particularly grateful for early conversations with Russell
        Keith-Magee, Eric Holscher, Jan Lehnardt, Andrey Petrov, and Mikeal Rogers, all of whom continue to inspire me
        with their patience and dedication to open source work. Thank you for your kindness.
      </p>
    </section>
    <section id="executive-summary">
      <h2>
        Executive Summary
      </h2>
      <p>
        Our modern society—everything from hospitals to stock markets to newspapers to social media—runs on software.
        But take a closer look, and you’ll find that the tools we use to build software are buckling under demand.
      </p>
      <p>
        Nearly all software today relies on free, public code (called “open source” code), written and maintained by
        communities of developers and other talent. Much like roads or bridges, which anyone can walk or drive on, open
        source code can be used by anyone—from companies to individuals—to build software. This type of code makes up
        the digital infrastructure of our society today.
      </p>
      <p>
        Just like physical infrastructure, digital infrastructure needs regular upkeep and maintenance. In the United
        States, over half of government spending on transportation and water infrastructure goes just to maintenance.<sup>
        <a href="appendix.xhtml#ftnt1" id="ftnt_ref1">[1]</a></sup> But financial support for digital
        infrastructure is much harder to come by. Currently, any financial support usually comes through sponsorships,
        direct or indirect, from software companies.
      </p>
      <p>
        Maintaining open source code used to be more manageable. Following the personal computer revolution of the
        early 1980s, most commercial software was proprietary, not shared. Software tools were built and used
        internally by companies, and their products were licensed to customers. Many companies felt that open source
        code was too nascent and unreliable for commercial use. In their view, software was meant to be charged for,
        not given away for free.
      </p>
      <p>
        Today, everybody uses open source code, including Fortune 500 companies, government, major software companies
        and startups. Sharing, rather than building proprietary code, turned out to be cheaper, easier, and more
        efficient. This increased demand puts additional strain on those who maintain this infrastructure, yet because
        these communities are not highly visible, the rest of the world has been slow to notice. Most of us take
        opening a software application for granted, the way we take turning on the lights for granted. We don’t think
        about the human capital necessary to make that happen.
      </p>
      <p>
        In the face of unprecedented demand, the costs of not supporting our digital infrastructure are numerous. On
        the risk side, there are security breaches and interruptions in service, due to infrastructure maintainers not
        being able to provide adequate support. On the opportunity side, we need to maintain and improve these software
        tools in order to support today’s startup renaissance, which relies heavily on this infrastructure.
        Additionally, open source work builds developers’ portfolios and helps them get hired, but the talent pool is
        remarkably less diverse than in tech overall. Expanding the pool of contributors can positively affect who
        participates in the tech industry at large.
      </p>
      <p>
        No individual company or organization is incentivized to address the problem alone, because open source code is
        a public good. In order to support our digital infrastructure, we must find ways to work together. Current
        examples of efforts to support digital infrastructure include the Linux Foundation’s Core Infrastructure
        Initiative and Mozilla’s Open Source Support (MOSS) program, as well as numerous software companies in various
        capacities.
      </p>
      <p>
        Sustaining our digital infrastructure is a new topic for many, and the challenges are not well understood. In
        addition, infrastructure projects are distributed across many people and organizations, defying common
        governance models. Many infrastructure projects have no legal entity at all. Any support strategy needs to
        accept and work with the decentralized, community-centric qualities of open source code. Increasing awareness
        of the problem, making it easier for institutions to contribute time and money, expanding the pool of open
        source contributors, and developing best practices and policies across infrastructure projects will all go a
        long way in building a healthy and sustainable ecosystem.
      </p>
    </section>
    <section id="introduction">
      <h2>
        Introduction
      </h2>
      <p>
        In 1998, a group of security experts in the UK got together to build a free set of encryption tools for the
        Internet.
      </p>
      <p>
        Soon everybody was talking about their project, called OpenSSL. (The developers had used an existing Australian
        project, called SSLeay, as their blueprint.) Not only was it comprehensive and decently reliable, but it was
        free. Writing cryptography wasn’t easy, and OpenSSL had solved a major pain point for developers worldwide.
      </p>
      <p>
        By 2014, two-thirds of all Web servers were using OpenSSL, enabling websites to securely pass credit card and
        other sensitive information over the Internet.<sup><a href="appendix.xhtml#ftnt2" id="ftnt_ref2">[2]</a></sup>
      </p>
      <p>
        Meanwhile, the project continued to be informally managed by a small handful of volunteers. A security
        consultant to the U.S. Department of Defense, Steve Marquess, noticed that one contributor, Stephen Henson, was
        working full time on OpenSSL. Curious, Marquess asked him what he did for income, and was shocked to learn that
        Henson made one-fifth of Marquess’s salary.
      </p>
      <p>
        Marquess had always considered himself to be a strong programmer, but his skills paled in comparison to
        Henson’s. Like others, Marquess had mistakenly assumed that someone as talented as Henson would have a
        comfortable salary to match.
      </p>
      <p>
        Henson had been working on OpenSSL since 1998. Marquess was newer to the project, joining in the early 2000s,
        and had worked with Henson for several years before learning of his income situation.
      </p>
      <p>
        Having worked with the Department of Defense, Marquess saw how critical OpenSSL was, not just to their
        software, but to other industries around the world, from enterprise to aeronautics to health care. Until that
        moment, he had <q>always assumed, (as had the rest of the world) that the OpenSSL team was large, active, and
        well resourced.<sup><a href="appendix.xhtml#ftnt3" id="ftnt_ref3">[3]</a></sup></q> In reality, OpenSSL wasn’t
        even able to support one person’s work.
      </p>
      <p>
        Marquess decided he wanted to help. Although he contributed code occasionally, he realized he could fill a more
        critical role on the business side. Marquess started out by arranging small consulting contracts through an
        existing nonprofit to help keep OpenSSL alive in its leanest years.
      </p>
      <p>
        As the volume of contracts grew, Marquess created the OpenSSL Software Foundation (OSF) to provide an official
        vehicle for revenue. Despite the number of individuals and companies relying on their software, OSF never
        received more than $2,000 in donations per year. Gross revenues (which came from consulting and contract work)
        never broke $1M, and much of that went toward security-related testing (which could cost hundreds of thousands
        of dollars) and server costs.
      </p>
      <p>
        There was enough to pay the salary of one developer, Stephen Henson. That meant that two-thirds of the Web
        relied on encryption software maintained by just one full-time employee.
      </p>
      <p>
        The OpenSSL team continued to work in relative obscurity until April 2014, when a Google engineer named Neel
        Mehta stumbled upon a major flaw in OpenSSL’s software. Two days later, another engineer at the Finnish company
        Codenomicon discovered the same problem. Both of them immediately contacted the OpenSSL team.
      </p>
      <p>
        That bug, nicknamed Heartbleed, had been included in a 2011 update. It had gone unnoticed for years. Heartbleed
        could allow any sophisticated hacker to capture secure information being passed to vulnerable web servers,
        including passwords, credit card information, and other sensitive data.
      </p>
      <p>
        Joseph Steinberg, a cybersecurity columnist for <cite>Forbes</cite>, wrote that <q class="normal">some might
        argue that [Heartbleed] is the worst vulnerability found...since commercial traffic began to flow on the
        Internet.</q><sup><a href="appendix.xhtml#ftnt4" id="ftnt_ref4">[4]</a></sup>
      </p>
      <p>
        Thanks to wide media reporting, much of the nontechnical world became familiar with the security bug, at least
        by name. Major services like Instagram, Gmail and Netflix were affected by Heartbleed.<sup><a href=
        "appendix.xhtml#ftnt5" id="ftnt_ref5">[5]</a></sup> Reporters also drew attention to OpenSSL itself, and how
        its team had struggled for years to support their work. OpenSSL was a known concern among security experts, but
        the team did not have adequate resources or attention to address the issues.
      </p>
      <p>
        Of Heartbleed, Marquess wrote, <q>The mystery is not that a few overworked volunteers missed this bug; the
        mystery is why it hasn’t happened more often.</q>
      </p>
      <p>
        People expressed their support by sending donations to the foundation. Although Marquess was grateful for their
        enthusiasm, the first round of donations came out to roughly $9,000: not nearly enough to sustain a team.
      </p>
      <p>
        Marquess took to the Internet to make an impassioned public plea for funding:
      </p>
      <blockquote>
        <p>
          These guys don’t work on OpenSSL for money. They don’t do it for fame (who outside of geek circles ever heard
          of them or OpenSSL until ‘heartbleed’ [sic] hit the news?). They do it out of pride in craftsmanship and the
          responsibility for something they believe in.
        </p>
        <p>
          It takes nerves of steel to work for many years on hundreds of thousands of lines of very complex code, with
          every line of code you touch visible to the world, knowing that code is used by banks, firewalls, weapons
          systems, web sites, smart phones, industry, government, everywhere. Knowing that you’ll be ignored and
          unappreciated until something goes wrong.
        </p>
        <p>
          <strong>There should be at least a half dozen full time OpenSSL team members, not just one, able to
          concentrate on the care and feeding of OpenSSL without having to hustle commercial work.</strong> If you’re a
          corporate or government decision maker in a position to do something about it, give it some thought. Please.
          I’m getting old and weary and I’d like to retire someday.<sup><a href="appendix.xhtml#ftnt6" id=
          "ftnt_ref6">[6]</a></sup>
        </p>
      </blockquote>
      <p>
        After Heartbleed, OpenSSL finally got more of the funding it needed—at least for now. They currently have
        enough money to pay four full-time employees for three years. But a year and a half into that funding, Marquess
        isn’t sure what will come next.
      </p>
      <p>
        Marquess said that Heartbleed was a boon for them, admitting it was a “little ironic” that publicity had helped
        elevate their cause. But after funding runs out and the world moves on, Marquess thinks they could be back in
        the same situation as pre-Heartbleed, and perhaps even worse: the client work that took Marquess years to build
        has dried up, since the team works full-time on OpenSSL right now and no longer has time for contracts.<sup>
        <a href="appendix.xhtml#ftnt7" id="ftnt_ref7">[7]</a></sup>
      </p>
      <p>
        Marquess himself is approaching retirement. He is the only person willing to handle the business and
        operational tasks associated with OpenSSL, including taxes, sourcing client work, and managing donors. The rest
        of his team prefers to focus on writing and maintaining code. He can’t hire someone else into his position when
        he retires, either, because he currently doesn’t take an income. Marquess remarked, <q>I don't know that we can
        hold this together for more than a couple of years</q>.<sup><a href="appendix.xhtml#ftnt8" id=
        "ftnt_ref8">[8]</a></sup>
      </p>
      <p>
        OpenSSL’s story is not unique, and in many ways, Marquess thinks they are the lucky ones. Countless other
        projects continue to go unheard of and unsupported. These projects make up the critical digital infrastructure
        that powers today’s software, and in turn, every aspect of our daily lives.
      </p>
      <p>
        Checking email, reading the news, checking stock prices, shopping online, going to the doctor, calling customer
        service—whether we realize it or not, everything we do is made possible by projects like OpenSSL. Without them,
        the technology that modern society relies upon simply could not function .
      </p>
      <p>
        Many of these projects are built and maintained by volunteers and offered to the public for free. Anyone, from
        Facebook to an amateur programmer, can use that code to build their own apps. And they do.
      </p>
      <p>
        If it sounds unbelievable that, as Marquess puts it, a <q>ragtag group of amateurs could outcompete huge
        corporations with their money and resources,</q><sup><a href="appendix.xhtml#ftnt9" id=
        "ftnt_ref9">[9]</a></sup> consider how this work reflects the rise of peer-to-peer collaboration around the
        world.
      </p>
      <p>
        Unlikely startups like Uber or AirBnB exploded into major corporate powerhouses in just a few years,
        challenging longstanding industries like transportation and hospitality. Musicians make a name for themselves
        through YouTube or Soundcloud instead of big record labels. Creative people fund their ideas through
        crowdfunding platforms like Kickstarter or Patreon.
      </p>
      <p>
        Similarly, these infrastructure projects sprang from passionate, creative developers who thought <q class=
        "em">I could do this better,</q> collaborating to build and release code to the world. The difference is that
        millions of people rely on this code to lead functional daily lives.
      </p>
      <p>
        Because code is less charismatic than a hit YouTube video or Kickstarter campaign, there is little public
        awareness of and appreciation for this work. As a result, there is not nearly enough institutional support for
        the output that sparked an information revolution. But we can’t ignore it for much longer.
      </p>
      <p>
        In the past five years, our reliance on software, and the free and public code that supports it, has
        accelerated. Technology has worked its way into every aspect of our lives. And the more people use software,
        the more software gets built, and the more work is required to maintain it all.
      </p>
      <p>
        Every successful startup needs public infrastructure to succeed, yet no one company is motivated to act on its
        own. As the world blazes ahead into a modern age of startups, code and technology, infrastructure continues to
        lag behind. The cracks in the foundation are not obvious right now, but they are widening. After years of
        unprecedented growth that propelled us into a new era of wealth and prosperity, we must act now in order to
        ensure that the world we built in such a short period of time does not come unexpectedly crashing down.
      </p>
      <p>
        To understand how to protect our future, first we need to understand software itself.
      </p>
    </section>
  </body>
</html>
